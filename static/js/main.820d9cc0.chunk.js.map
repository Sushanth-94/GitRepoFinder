{"version":3,"sources":["components/GitCard.js","components/Search.js","App.js","components/InfiniteScroll.js","index.js"],"names":["GitCard","repo","className","src","owner","avatar_url","alt","width","height","href","html_url","target","rel","name","description","license","size","forks","watchers","created_at","updated_at","Search","userInput","updateUserInput","type","placeholder","value","onChange","e","App","useState","setUserInput","pageNumber","setPageNumber","repos","setRepos","loading","setLoading","keepSearching","setKeepSearching","error","setError","useEffect","length","debouncedFn","fetchData","input","pageNum","a","fetch","response","json","jsonResponse","items","prevRepos","useCallback","delay","timer","debounceInput","clearTimeout","setTimeout","debounce","InfiniteScroll","observer","useRef","lastElement","node","current","disconnect","IntersectionObserver","entries","isIntersecting","pn","observe","val","map","index","ref","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.820d9cc0.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\n\r\nconst GitCard = ({repo}) => {\r\n  return (\r\n    <div className=\"gitCardContainer\">\r\n      <div className=\"profile\">\r\n        <img\r\n          src={`${repo.owner.avatar_url}`}\r\n          alt={'userProfile'}\r\n          width={'60%'}\r\n          height={'60%'}\r\n        />\r\n        <a\r\n          className=\"btnPrimary\"\r\n          href={repo.owner.html_url}\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\">\r\n          View Profile\r\n        </a>\r\n      </div>\r\n      <div className=\"repoDetail\">\r\n        <div>Name: {repo.name}</div>\r\n        <div>Description: {repo.description}</div>\r\n        <div>License: {repo && repo.license ? repo.license.name : ''}</div>\r\n        <div>\r\n          <span className=\"label labelPrimary\">Size: {repo.size}</span>\r\n          <span className=\"label labelPrimary\">Forks: {repo.forks}</span>\r\n          <span className=\"label labelPrimary\">Watchers: {repo.watchers}</span>\r\n        </div>\r\n        <div>Created At: {repo.created_at}</div>\r\n        <div>Last Updated At: {repo.updated_at}</div>\r\n        <a\r\n          className=\"btnPrimary\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n          href={repo.html_url}>\r\n          View Repo\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GitCard;\r\n","import React from 'react';\r\nimport '../App.css';\r\n\r\nconst Search = ({userInput, updateUserInput}) => {\r\n  return (\r\n    <div className=\"inputContainer\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search repositories\"\r\n        value={userInput}\r\n        onChange={(e) => updateUserInput(e.target.value)}\r\n        className=\"input\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, {useState, useRef, useCallback} from 'react';\nimport './App.css';\nimport GitCard from './components/GitCard';\nimport InfiniteScroll from './components/InfiniteScroll';\nimport Search from './components/Search';\n\nfunction App() {\n  const [userInput, setUserInput] = useState('');\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const {repos, loading, keepSearching, error} = InfiniteScroll(\n    userInput,\n    pageNumber,\n  );\n\n  const observer = useRef();\n  const lastElement = useCallback(\n    (node) => {\n      if (loading) return;\n      if (observer.current) observer.current.disconnect();\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting && keepSearching) {\n          setPageNumber((pn) => pn + 1);\n        }\n      });\n      if (node) observer.current.observe(node);\n    },\n    [loading, keepSearching],\n  );\n\n  return (\n    <div className=\"App\">\n      <Search\n        userInput={userInput}\n        updateUserInput={(val) => {\n          setUserInput(val);\n          setPageNumber(1);\n        }}\n      />\n      {repos.length > 0 ? (\n        repos.map((repo, index) => {\n          if (index === repos.length - 1) {\n            return (\n              <div ref={lastElement} key={repo.id}>\n                <GitCard repo={repo} />\n              </div>\n            );\n          } else {\n            return <GitCard key={repo.id} repo={repo} />;\n          }\n        })\n      ) : (\n        <div className=\"loading\">\n          {error && 'No results, please refine your search'}\n        </div>\n      )}\n      <div className=\"loading\">{loading && 'Loading...'}</div>\n    </div>\n  );\n}\n\nexport default App;\n","import {useCallback, useEffect, useState} from 'react';\r\n\r\nexport default function InfiniteScroll(userInput, pageNumber) {\r\n  const [repos, setRepos] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [keepSearching, setKeepSearching] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setRepos([]);\r\n    setError(false);\r\n  }, [userInput]);\r\n\r\n  useEffect(() => {\r\n    if (userInput.length > 0) {\r\n      debouncedFn(userInput, pageNumber);\r\n    }\r\n  }, [userInput, pageNumber]);\r\n\r\n  const debounce = (delay) => {\r\n    let timer;\r\n    return function (debounceInput, pageNumber) {\r\n      if (timer) clearTimeout(timer);\r\n      timer = setTimeout(() => {\r\n        fetchData(debounceInput, pageNumber);\r\n      }, delay);\r\n    };\r\n  };\r\n\r\n  const fetchData = async (input, pageNum) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.github.com/search/repositories?q=${input}&per_page=10&page=${pageNum}`,\r\n      );\r\n      const jsonResponse = await response.json();\r\n      if (jsonResponse.items && jsonResponse.items.length > 0) {\r\n        setRepos((prevRepos) => [...prevRepos, ...jsonResponse.items]);\r\n        setLoading(false);\r\n        setKeepSearching(jsonResponse.items.length > 0);\r\n      } else {\r\n        setLoading(false);\r\n        setError(true);\r\n        setKeepSearching(false);\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setError(true);\r\n      setRepos([]);\r\n      setKeepSearching(false);\r\n    }\r\n  };\r\n\r\n  const debouncedFn = useCallback(debounce(500), []);\r\n\r\n  return {repos, loading, keepSearching, error};\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}